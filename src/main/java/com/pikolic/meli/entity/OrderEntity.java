package com.pikolic.meli.entity;

import jakarta.persistence.*;
import lombok.*;

import java.time.LocalDate;

/**
 * JPA entity representing an order in the Meli e-commerce system.
 * <p>
 * This entity maps to the {@code orders} table in the database and contains
 * information about a specific order, including the associated client, item,
 * purchase date, and total amount.
 * </p>
 *
 * <p>Relationship details:</p>
 * <ul>
 *     <li>{@link #client}: Many-to-one relationship with {@link ClientEntity}.
 *         Each order is associated with exactly one client.</li>
 *     <li>{@link #item}: Many-to-one relationship with {@link ItemEntity}.
 *         Each order is associated with exactly one item.</li>
 * </ul>
 *
 * <p>Lombok annotations:</p>
 * <ul>
 *     <li>{@link Getter} / {@link Setter}: Automatically generates getters and setters for all fields.</li>
 *     <li>{@link Builder}: Provides a fluent builder API for creating instances.</li>
 *     <li>{@link AllArgsConstructor} / {@link NoArgsConstructor}: Generates constructors with all fields and no arguments.</li>
 * </ul>
 *
 * <p>All fields are required and cannot be null, enforcing data integrity at the database level.</p>
 *
 * @author Angel Lomel√≠
 * @see ClientEntity
 * @see ItemEntity
 */
@Entity
@Table(name = "orders")
@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class OrderEntity {

    /** Unique identifier for the order. Auto-generated by the database. */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /** The client who placed the order. Cannot be null. */
    @ManyToOne
    @JoinColumn(name = "client_id", nullable = false)
    private ClientEntity client;

    /** The item associated with the order. Cannot be null. */
    @ManyToOne
    @JoinColumn(name = "item_id", nullable = false)
    private ItemEntity item;

    /** The date when the order was placed. Cannot be null. */
    @Column(nullable = false)
    private LocalDate purchaseDate;

    /** The total amount of the order. Cannot be null. */
    @Column(nullable = false)
    private Double total;
}
